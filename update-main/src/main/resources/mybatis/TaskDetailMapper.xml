<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinking.update.main.dao.TaskDetailDao">
    <!-- TaskDetail的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_TaskDetail_Map" type="com.thinking.update.main.domain.entity.TaskDetail">
        <id column="id" property="id" />
        <result column="task_id" property="taskId" />
        <result column="app_id" property="appId" />
    </resultMap>

    <!-- 数据库中表名为:t_task_detail的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_task_detail_Column">
        t_task_detail.id as id
        ,t_task_detail.task_id as task_id
        ,t_task_detail.app_id as app_id
    </sql>

    <!--获得类名为:TaskDetail对应的数据库表的数据总行数 -->
    <select id="getTaskDetailRowCount" resultType="java.lang.Long">
        select count(id) from t_task_detail
    </select>
    <!-- 获得类名为:TaskDetail对应数据库中表的数据集合 -->
    <select id="selectTaskDetail" resultMap="result_TaskDetail_Map">
        select 
        <include refid="t_task_detail_Column" /> 
        from t_task_detail
    </select> 

    <!-- 获得一个TaskDetail对象,以参数TaskDetail对象中不为空的属性作为条件进行查询-->
    <select id="selectTaskDetailByObj" parameterType="com.thinking.update.main.domain.entity.TaskDetail" resultMap="result_TaskDetail_Map">
        select 
            <include refid="t_task_detail_Column" /> 
        from t_task_detail
        <where>
            <if test="appId != null "> and t_task_detail.app_id = #{appId}</if>
            <if test="taskId != null "> and t_task_detail.task_id = #{taskId}</if>
            <if test="id != null "> and t_task_detail.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过TaskDetail的id获得对应数据库中表的数据对象-->
    <select id="selectTaskDetailById" parameterType="java.lang.Long" resultMap="result_TaskDetail_Map">
        select 
            <include refid="t_task_detail_Column" /> 
        from t_task_detail
        where t_task_detail.id = #{id}
    </select> 

    <!-- 将TaskDetail插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertTaskDetail" parameterType="com.thinking.update.main.domain.entity.TaskDetail">
        insert into t_task_detail(id,task_id,app_id) 
        values(#{id},#{taskId},#{appId})
    </insert>

    <!-- 将TaskDetail中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyTaskDetail" parameterType="com.thinking.update.main.domain.entity.TaskDetail">
        insert into t_task_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="taskId != null">task_id,</if>
            <if test="appId != null">app_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="taskId != null"> #{taskId},</if>
            <if test="appId != null"> #{appId},</if>
        </trim>
    </insert>

    <!-- 将TaskDetail批量插入到对应数据库的表中-->
    <insert id="insertTaskDetailByBatch" parameterType="java.util.ArrayList">
        insert into t_task_detail(id,task_id,app_id) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.taskId},#{item.appId})
        </foreach>
    </insert>

    <!-- 通过TaskDetail的id将数据库表中对应的数据删除-->
    <delete id="deleteTaskDetailById" parameterType="java.lang.Long">
        delete from t_task_detail
        where id = #{id}
    </delete>

    <!-- 通过TaskDetail的id将TaskDetail的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateTaskDetailById" parameterType="com.thinking.update.main.domain.entity.TaskDetail">
        update t_task_detail set
            task_id=#{taskId}
            ,app_id=#{appId}
        where id=#{id}
    </update>

    <!-- 通过TaskDetail的id将TaskDetail中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyTaskDetailById" parameterType="com.thinking.update.main.domain.entity.TaskDetail">
        update t_task_detail
        <set>
            <if test="taskId != null">
                task_id=#{taskId},
            </if>
            <if test="appId != null">
                app_id=#{appId},
            </if>
        </set>
        where id=#{id}
    </update>

</mapper>