<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinking.update.main.dao.TaskDao">
    <!-- Task的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Task_Map" type="com.thinking.update.main.entity.Task">
        <id column="id" property="id" />
        <result column="task_name" property="taskName" />
        <result column="create_time" property="createTime" />
        <result column="finished_number" property="finishedNumber" />
        <result column="remark" property="remark" />
        <result column="department_ids" property="departmentIds" />
        <result column="update_time" property="updateTime" />
        <result column="update_user" property="updateUser" />
        <result column="app_number" property="appNumber" />
        <result column="persent" property="persent" />
        <result column="departments" property="departments" />
        <result column="create_user" property="createUser" />
        <result column="ts" property="ts" />
    </resultMap>

    <!-- 数据库中表名为:t_task的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_task_Column">
        t_task.id as id
        ,t_task.task_name as task_name
        ,t_task.create_time as create_time
        ,t_task.finished_number as finished_number
        ,t_task.remark as remark
        ,t_task.department_ids as department_ids
        ,t_task.update_time as update_time
        ,t_task.update_user as update_user
        ,t_task.app_number as app_number
        ,t_task.persent as persent
        ,t_task.departments as departments
        ,t_task.create_user as create_user
        ,t_task.ts as ts
    </sql>

    <!--获得类名为:Task对应的数据库表的数据总行数 -->
    <select id="getTaskRowCount" resultType="java.lang.Long">
        select count(id) from t_task
    </select>
    <!-- 获得类名为:Task对应数据库中表的数据集合 -->
    <select id="selectTask" resultMap="result_Task_Map">
        select 
        <include refid="t_task_Column" /> 
        from t_task
    </select> 

    <!-- 获得一个Task对象,以参数Task对象中不为空的属性作为条件进行查询-->
    <select id="selectTaskByObj" parameterType="com.thinking.update.main.entity.Task" resultMap="result_Task_Map">
        select 
            <include refid="t_task_Column" /> 
        from t_task
        <where>
            <if test="ts != null "> and t_task.ts = #{ts}</if>
            <if test="createUser != null "> and t_task.create_user = #{createUser}</if>
            <if test="departments != null "> and t_task.departments = #{departments}</if>
            <if test="persent != null "> and t_task.persent = #{persent}</if>
            <if test="appNumber != null "> and t_task.app_number = #{appNumber}</if>
            <if test="updateUser != null "> and t_task.update_user = #{updateUser}</if>
            <if test="updateTime != null "> and t_task.update_time = #{updateTime}</if>
            <if test="departmentIds != null "> and t_task.department_ids = #{departmentIds}</if>
            <if test="remark != null "> and t_task.remark = #{remark}</if>
            <if test="finishedNumber != null "> and t_task.finished_number = #{finishedNumber}</if>
            <if test="createTime != null "> and t_task.create_time = #{createTime}</if>
            <if test="taskName != null "> and t_task.task_name = #{taskName}</if>
            <if test="id != null "> and t_task.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Task的id获得对应数据库中表的数据对象-->
    <select id="selectTaskById" parameterType="java.lang.Long" resultMap="result_Task_Map">
        select 
            <include refid="t_task_Column" /> 
        from t_task
        where t_task.id = #{id}
    </select> 

    <!-- 将Task插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertTask" parameterType="com.thinking.update.main.entity.Task">
        insert into t_task(id,task_name,create_time,finished_number,remark,department_ids,update_time,update_user,app_number,persent,departments,create_user,ts) 
        values(#{id},#{taskName},#{createTime},#{finishedNumber},#{remark},#{departmentIds},#{updateTime},#{updateUser},#{appNumber},#{persent},#{departments},#{createUser},#{ts})
    </insert>

    <!-- 将Task中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyTask" parameterType="com.thinking.update.main.entity.Task">
        insert into t_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="taskName != null">task_name,</if>
            <if test="createTime != null">create_time,</if>
            <if test="finishedNumber != null">finished_number,</if>
            <if test="remark != null">remark,</if>
            <if test="departmentIds != null">department_ids,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateUser != null">update_user,</if>
            <if test="appNumber != null">app_number,</if>
            <if test="persent != null">persent,</if>
            <if test="departments != null">departments,</if>
            <if test="createUser != null">create_user,</if>
            <if test="ts != null">ts,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="taskName != null"> #{taskName},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="finishedNumber != null"> #{finishedNumber},</if>
            <if test="remark != null"> #{remark},</if>
            <if test="departmentIds != null"> #{departmentIds},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="updateUser != null"> #{updateUser},</if>
            <if test="appNumber != null"> #{appNumber},</if>
            <if test="persent != null"> #{persent},</if>
            <if test="departments != null"> #{departments},</if>
            <if test="createUser != null"> #{createUser},</if>
            <if test="ts != null"> #{ts},</if>
        </trim>
    </insert>

    <!-- 将Task批量插入到对应数据库的表中-->
    <insert id="insertTaskByBatch" parameterType="ArrayList">
        insert into t_task(id,task_name,create_time,finished_number,remark,department_ids,update_time,update_user,app_number,persent,departments,create_user,ts) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.taskName},#{item.createTime},#{item.finishedNumber},#{item.remark},#{item.departmentIds},#{item.updateTime},#{item.updateUser},#{item.appNumber},#{item.persent},#{item.departments},#{item.createUser},#{item.ts})
        </foreach>
    </insert>

    <!-- 通过Task的id将数据库表中对应的数据删除-->
    <delete id="deleteTaskById" parameterType="java.lang.Long">
        delete from t_task
        where id = #{id}
    </delete>

    <!-- 通过Task的id将Task的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateTaskById" parameterType="com.thinking.update.main.entity.Task">
        update t_task set
            task_name=#{taskName}
            ,create_time=#{createTime}
            ,finished_number=#{finishedNumber}
            ,remark=#{remark}
            ,department_ids=#{departmentIds}
            ,update_time=#{updateTime}
            ,update_user=#{updateUser}
            ,app_number=#{appNumber}
            ,persent=#{persent}
            ,departments=#{departments}
            ,create_user=#{createUser}
            ,ts=#{ts}
        where id=#{id}
    </update>

    <!-- 通过Task的id将Task中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyTaskById" parameterType="com.thinking.update.main.entity.Task">
        update t_task
        <set>
            <if test="taskName != null">
                task_name=#{taskName},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="finishedNumber != null">
                finished_number=#{finishedNumber},
            </if>
            <if test="remark != null">
                remark=#{remark},
            </if>
            <if test="departmentIds != null">
                department_ids=#{departmentIds},
            </if>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
            <if test="updateUser != null">
                update_user=#{updateUser},
            </if>
            <if test="appNumber != null">
                app_number=#{appNumber},
            </if>
            <if test="persent != null">
                persent=#{persent},
            </if>
            <if test="departments != null">
                departments=#{departments},
            </if>
            <if test="createUser != null">
                create_user=#{createUser},
            </if>
            <if test="ts != null">
                ts=#{ts},
            </if>
        </set>
        where id=#{id}
    </update>

</mapper>