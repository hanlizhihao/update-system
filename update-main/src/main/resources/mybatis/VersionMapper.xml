<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinking.update.main.dao.VersionDao">
    <!-- Version的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Version_Map" type="com.thinking.update.main.entity.Version">
        <id column="id" property="id" />
        <result column="create_user_id" property="createUserId" />
        <result column="md5_name" property="md5Name" />
        <result column="create_time" property="createTime" />
        <result column="file_name" property="fileName" />
        <result column="md5_code" property="md5Code" />
        <result column="remark" property="remark" />
        <result column="type" property="type" />
        <result column="url" property="url" />
        <result column="file_size" property="fileSize" />
        <result column="update_time" property="updateTime" />
        <result column="version_name" property="versionName" />
        <result column="update_user" property="updateUser" />
        <result column="update_user_id" property="updateUserId" />
        <result column="create_user" property="createUser" />
        <result column="ts" property="ts" />
    </resultMap>

    <!-- 数据库中表名为:t_version的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_version_Column">
        t_version.id as id
        ,t_version.create_user_id as create_user_id
        ,t_version.md5_name as md5_name
        ,t_version.create_time as create_time
        ,t_version.file_name as file_name
        ,t_version.md5_code as md5_code
        ,t_version.remark as remark
        ,t_version.type as type
        ,t_version.url as url
        ,t_version.file_size as file_size
        ,t_version.update_time as update_time
        ,t_version.version_name as version_name
        ,t_version.update_user as update_user
        ,t_version.update_user_id as update_user_id
        ,t_version.create_user as create_user
        ,t_version.ts as ts
    </sql>

    <!--获得类名为:Version对应的数据库表的数据总行数 -->
    <select id="getVersionRowCount" resultType="java.lang.Long">
        select count(id) from t_version
    </select>
    <!-- 获得类名为:Version对应数据库中表的数据集合 -->
    <select id="selectVersion" resultMap="result_Version_Map">
        select 
        <include refid="t_version_Column" /> 
        from t_version
    </select> 

    <!-- 获得一个Version对象,以参数Version对象中不为空的属性作为条件进行查询-->
    <select id="selectVersionByObj" parameterType="com.thinking.update.main.entity.Version" resultMap="result_Version_Map">
        select 
            <include refid="t_version_Column" /> 
        from t_version
        <where>
            <if test="ts != null "> and t_version.ts = #{ts}</if>
            <if test="createUser != null "> and t_version.create_user = #{createUser}</if>
            <if test="updateUserId != null "> and t_version.update_user_id = #{updateUserId}</if>
            <if test="updateUser != null "> and t_version.update_user = #{updateUser}</if>
            <if test="versionName != null "> and t_version.version_name = #{versionName}</if>
            <if test="updateTime != null "> and t_version.update_time = #{updateTime}</if>
            <if test="fileSize != null "> and t_version.file_size = #{fileSize}</if>
            <if test="url != null "> and t_version.url = #{url}</if>
            <if test="type != null "> and t_version.type = #{type}</if>
            <if test="remark != null "> and t_version.remark = #{remark}</if>
            <if test="md5Code != null "> and t_version.md5_code = #{md5Code}</if>
            <if test="fileName != null "> and t_version.file_name = #{fileName}</if>
            <if test="createTime != null "> and t_version.create_time = #{createTime}</if>
            <if test="md5Name != null "> and t_version.md5_name = #{md5Name}</if>
            <if test="createUserId != null "> and t_version.create_user_id = #{createUserId}</if>
            <if test="id != null "> and t_version.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Version的id获得对应数据库中表的数据对象-->
    <select id="selectVersionById" parameterType="java.lang.Long" resultMap="result_Version_Map">
        select 
            <include refid="t_version_Column" /> 
        from t_version
        where t_version.id = #{id}
    </select> 

    <!-- 将Version插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertVersion" parameterType="com.thinking.update.main.entity.Version">
        insert into t_version(id,create_user_id,md5_name,create_time,file_name,md5_code,remark,type,url,file_size,update_time,version_name,update_user,update_user_id,create_user,ts) 
        values(#{id},#{createUserId},#{md5Name},#{createTime},#{fileName},#{md5Code},#{remark},#{type},#{url},#{fileSize},#{updateTime},#{versionName},#{updateUser},#{updateUserId},#{createUser},#{ts})
    </insert>

    <!-- 将Version中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyVersion" parameterType="com.thinking.update.main.entity.Version">
        insert into t_version
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="createUserId != null">create_user_id,</if>
            <if test="md5Name != null">md5_name,</if>
            <if test="createTime != null">create_time,</if>
            <if test="fileName != null">file_name,</if>
            <if test="md5Code != null">md5_code,</if>
            <if test="remark != null">remark,</if>
            <if test="type != null">type,</if>
            <if test="url != null">url,</if>
            <if test="fileSize != null">file_size,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="versionName != null">version_name,</if>
            <if test="updateUser != null">update_user,</if>
            <if test="updateUserId != null">update_user_id,</if>
            <if test="createUser != null">create_user,</if>
            <if test="ts != null">ts,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="createUserId != null"> #{createUserId},</if>
            <if test="md5Name != null"> #{md5Name},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="fileName != null"> #{fileName},</if>
            <if test="md5Code != null"> #{md5Code},</if>
            <if test="remark != null"> #{remark},</if>
            <if test="type != null"> #{type},</if>
            <if test="url != null"> #{url},</if>
            <if test="fileSize != null"> #{fileSize},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="versionName != null"> #{versionName},</if>
            <if test="updateUser != null"> #{updateUser},</if>
            <if test="updateUserId != null"> #{updateUserId},</if>
            <if test="createUser != null"> #{createUser},</if>
            <if test="ts != null"> #{ts},</if>
        </trim>
    </insert>

    <!-- 将Version批量插入到对应数据库的表中-->
    <insert id="insertVersionByBatch" parameterType="java.util.ArrayList">
        insert into t_version(id,create_user_id,md5_name,create_time,file_name,md5_code,remark,type,url,file_size,update_time,version_name,update_user,update_user_id,create_user,ts) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.createUserId},#{item.md5Name},#{item.createTime},#{item.fileName},#{item.md5Code},#{item.remark},#{item.type},#{item.url},#{item.fileSize},#{item.updateTime},#{item.versionName},#{item.updateUser},#{item.updateUserId},#{item.createUser},#{item.ts})
        </foreach>
    </insert>

    <!-- 通过Version的id将数据库表中对应的数据删除-->
    <delete id="deleteVersionById" parameterType="java.lang.Long">
        delete from t_version
        where id = #{id}
    </delete>

    <!-- 通过Version的id将Version的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateVersionById" parameterType="com.thinking.update.main.entity.Version">
        update t_version set
            create_user_id=#{createUserId}
            ,md5_name=#{md5Name}
            ,create_time=#{createTime}
            ,file_name=#{fileName}
            ,md5_code=#{md5Code}
            ,remark=#{remark}
            ,type=#{type}
            ,url=#{url}
            ,file_size=#{fileSize}
            ,update_time=#{updateTime}
            ,version_name=#{versionName}
            ,update_user=#{updateUser}
            ,update_user_id=#{updateUserId}
            ,create_user=#{createUser}
            ,ts=#{ts}
        where id=#{id}
    </update>

    <!-- 通过Version的id将Version中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyVersionById" parameterType="com.thinking.update.main.entity.Version">
        update t_version
        <set>
            <if test="createUserId != null">
                create_user_id=#{createUserId},
            </if>
            <if test="md5Name != null">
                md5_name=#{md5Name},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="fileName != null">
                file_name=#{fileName},
            </if>
            <if test="md5Code != null">
                md5_code=#{md5Code},
            </if>
            <if test="remark != null">
                remark=#{remark},
            </if>
            <if test="type != null">
                type=#{type},
            </if>
            <if test="url != null">
                url=#{url},
            </if>
            <if test="fileSize != null">
                file_size=#{fileSize},
            </if>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
            <if test="versionName != null">
                version_name=#{versionName},
            </if>
            <if test="updateUser != null">
                update_user=#{updateUser},
            </if>
            <if test="updateUserId != null">
                update_user_id=#{updateUserId},
            </if>
            <if test="createUser != null">
                create_user=#{createUser},
            </if>
            <if test="ts != null">
                ts=#{ts},
            </if>
        </set>
        where id=#{id}
    </update>

</mapper>