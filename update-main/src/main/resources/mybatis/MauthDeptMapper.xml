<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinking.update.main.dao.MauthDeptDao">
    <!-- MauthDept的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_MauthDept_Map" type="com.thinking.update.main.domain.entity.MauthDept">
        <id column="dept_id" property="deptId" />
        <result column="code" property="code" />
        <result column="updated_at" property="updatedAt" />
        <result column="level" property="level" />
        <result column="name" property="name" />
        <result column="created_at" property="createdAt" />
        <result column="remark" property="remark" />
        <result column="lft" property="lft" />
        <result column="area_number" property="areaNumber" />
        <result column="rgt" property="rgt" />
    </resultMap>

    <!-- 数据库中表名为:mauth_dept的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="mauth_dept_Column">
        mauth_dept.dept_id as dept_id
        ,mauth_dept.code as code
        ,mauth_dept.updated_at as updated_at
        ,mauth_dept.level as level
        ,mauth_dept.name as name
        ,mauth_dept.created_at as created_at
        ,mauth_dept.remark as remark
        ,mauth_dept.lft as lft
        ,mauth_dept.area_number as area_number
        ,mauth_dept.rgt as rgt
    </sql>

    <!--获得类名为:MauthDept对应的数据库表的数据总行数 -->
    <select id="getMauthDeptRowCount" resultType="java.lang.Long">
        select count(dept_id) from mauth_dept
    </select>
    <!-- 获得类名为:MauthDept对应数据库中表的数据集合 -->
    <select id="selectMauthDept" resultMap="result_MauthDept_Map">
        select 
        <include refid="mauth_dept_Column" /> 
        from mauth_dept
    </select> 

    <!-- 获得一个MauthDept对象,以参数MauthDept对象中不为空的属性作为条件进行查询-->
    <select id="selectMauthDeptByObj" parameterType="com.thinking.update.main.domain.entity.MauthDept" resultMap="result_MauthDept_Map">
        select 
            <include refid="mauth_dept_Column" /> 
        from mauth_dept
        <where>
            <if test="rgt != null "> and mauth_dept.rgt = #{rgt}</if>
            <if test="areaNumber != null "> and mauth_dept.area_number = #{areaNumber}</if>
            <if test="lft != null "> and mauth_dept.lft = #{lft}</if>
            <if test="remark != null "> and mauth_dept.remark = #{remark}</if>
            <if test="createdAt != null "> and mauth_dept.created_at = #{createdAt}</if>
            <if test="name != null "> and mauth_dept.name = #{name}</if>
            <if test="level != null "> and mauth_dept.level = #{level}</if>
            <if test="updatedAt != null "> and mauth_dept.updated_at = #{updatedAt}</if>
            <if test="code != null "> and mauth_dept.code = #{code}</if>
            <if test="deptId != null "> and mauth_dept.dept_id = #{deptId}</if>
        </where>
    </select>

    <!-- 获得一个MauthDept对象,以参数MauthDept对象中不为空的属性作为条件进行查询-->
    <select id="selectBylftAndrgtAndLevel" parameterType="com.thinking.update.main.domain.entity.MauthDept" resultMap="result_MauthDept_Map">
        select
        <include refid="mauth_dept_Column" />
        from mauth_dept
        <where>
            <if test="rgt != null "> and mauth_dept.rgt &lt;= #{mauthDept.rgt}</if>
            <if test="lft != null "> and mauth_dept.lft &gt;= #{mauthDept.lft}</if>
            <if test="level != null "> and mauth_dept.level = #{mauthDept.level}</if>
        </where>
    </select>

    <!-- 通过MauthDept的id获得对应数据库中表的数据对象-->
    <select id="selectMauthDeptById" parameterType="java.lang.Integer" resultMap="result_MauthDept_Map">
        select 
            <include refid="mauth_dept_Column" /> 
        from mauth_dept
        where mauth_dept.dept_id = #{id}
    </select> 

    <!-- 将MauthDept插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertMauthDept" parameterType="com.thinking.update.main.domain.entity.MauthDept">
        insert into mauth_dept(dept_id,code,updated_at,level,name,created_at,remark,lft,area_number,rgt) 
        values(#{deptId},#{code},#{updatedAt},#{level},#{name},#{createdAt},#{remark},#{lft},#{areaNumber},#{rgt})
    </insert>

    <!-- 将MauthDept中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyMauthDept" parameterType="com.thinking.update.main.domain.entity.MauthDept">
        insert into mauth_dept
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">dept_id,</if>
            <if test="code != null">code,</if>
            <if test="updatedAt != null">updated_at,</if>
            <if test="level != null">level,</if>
            <if test="name != null">name,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="remark != null">remark,</if>
            <if test="lft != null">lft,</if>
            <if test="areaNumber != null">area_number,</if>
            <if test="rgt != null">rgt,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deptId != null"> #{deptId},</if>
            <if test="code != null"> #{code},</if>
            <if test="updatedAt != null"> #{updatedAt},</if>
            <if test="level != null"> #{level},</if>
            <if test="name != null"> #{name},</if>
            <if test="createdAt != null"> #{createdAt},</if>
            <if test="remark != null"> #{remark},</if>
            <if test="lft != null"> #{lft},</if>
            <if test="areaNumber != null"> #{areaNumber},</if>
            <if test="rgt != null"> #{rgt},</if>
        </trim>
    </insert>

    <!-- 将MauthDept批量插入到对应数据库的表中-->
    <insert id="insertMauthDeptByBatch" parameterType="java.util.ArrayList">
        insert into mauth_dept(dept_id,code,updated_at,level,name,created_at,remark,lft,area_number,rgt) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.deptId},#{item.code},#{item.updatedAt},#{item.level},#{item.name},#{item.createdAt},#{item.remark},#{item.lft},#{item.areaNumber},#{item.rgt})
        </foreach>
    </insert>

    <!-- 通过MauthDept的id将数据库表中对应的数据删除-->
    <delete id="deleteMauthDeptById" parameterType="java.lang.Integer">
        delete from mauth_dept
        where dept_id = #{id}
    </delete>

    <!-- 通过MauthDept的id将MauthDept的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateMauthDeptById" parameterType="com.thinking.update.main.domain.entity.MauthDept">
        update mauth_dept set
            code=#{code}
            ,updated_at=#{updatedAt}
            ,level=#{level}
            ,name=#{name}
            ,created_at=#{createdAt}
            ,remark=#{remark}
            ,lft=#{lft}
            ,area_number=#{areaNumber}
            ,rgt=#{rgt}
        where dept_id=#{deptId}
    </update>

    <!-- 通过MauthDept的id将MauthDept中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyMauthDeptById" parameterType="com.thinking.update.main.domain.entity.MauthDept">
        update mauth_dept
        <set>
            <if test="code != null">
                code=#{code},
            </if>
            <if test="updatedAt != null">
                updated_at=#{updatedAt},
            </if>
            <if test="level != null">
                level=#{level},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="createdAt != null">
                created_at=#{createdAt},
            </if>
            <if test="remark != null">
                remark=#{remark},
            </if>
            <if test="lft != null">
                lft=#{lft},
            </if>
            <if test="areaNumber != null">
                area_number=#{areaNumber},
            </if>
            <if test="rgt != null">
                rgt=#{rgt},
            </if>
        </set>
        where dept_id=#{deptId}
    </update>

</mapper>